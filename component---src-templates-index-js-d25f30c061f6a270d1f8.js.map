{"version":3,"sources":["webpack:///./src/components/CurrentObsession.js","webpack:///./src/templates/index.js","webpack:///./src/components/PostListItem.js","webpack:///./src/data/obsession-data.js"],"names":["CurrentObsession","obsessions","length","lyricsExcerpt","songwriters","videoUrl","className","src","frameborder","allow","allowfullscreen","PageNavigation","previousPagePath","nextPagePath","to","pageQuery","IndexPage","edges","data","posts","pageContext","map","edge","PostListItem","key","node","id","post","Layout","SEO","title","BlogPostImageCover","imageUrl","style","backgroundImage","frontmatter","path","date","description","dateInsertion"],"mappings":"iRA8BeA,G,UAxBU,WAAO,IAAD,EACsBC,IAC7CA,IAAWC,OAAS,GADhBC,EADmB,EACnBA,cAAeC,EADI,EACJA,YAAaC,EADT,EACSA,SAGpC,OACI,yBAAKC,UAAU,gCACX,yBAAKA,UAAU,kBACX,wBAAIA,UAAU,0BAAd,qBACA,uBAAGA,UAAU,8BACT,2BAAIH,IAER,uBAAGG,UAAU,0BAAb,KAAyCF,GACzC,4BACIE,UAAU,oBACVC,IAAKF,EACLG,YAAY,IACZC,MAAM,0EACNC,iBAAe,QCY7BC,G,UAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAkBC,EAArB,EAAqBA,aAArB,OACnB,yBAAKP,UAAU,mBACVM,GACG,kBAAC,OAAD,CAAME,GAAIF,GACN,yBAAKN,UAAU,4BAAf,aAGPO,GACG,kBAAC,OAAD,CAAMC,GAAID,GACN,yBAAKP,UAAU,4BAAf,YAMHS,EAAS,aAyBPC,UAjEG,SAAC,GAKZ,IAHUC,EAGX,EAJFC,KACIC,MAASF,MAGX,IADFG,YAAeR,EACb,EADaA,iBAAkBC,EAC/B,EAD+BA,aAE3BM,EAAQF,EAAMI,KAAI,SAAAC,GAAI,OACxB,kBAACC,EAAA,EAAD,CAAcC,IAAKF,EAAKG,KAAKC,GAAIC,KAAML,EAAKG,UAGhD,OACI,kBAACG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,MAAM,SACX,yBAAKxB,UAAU,UACVa,EACD,kBAAC,EAAD,CACIP,iBAAkBA,EAClBC,aAAcA,KAGtB,kBAAC,EAAD,S,yDC9BZ,qCAoCMkB,GApCN,UAoC2B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACvBA,EACI,yBACI1B,UAAU,4BACV2B,MAAO,CAAEC,gBAAgB,QAASF,EAAV,QAE5B,OAEOT,IAvCM,SAAC,GAAD,IAAGI,EAAH,EAAGA,KAAH,OACjB,yBAAKrB,UAAU,uBACX,yBAAKA,UAAWqB,EAAKQ,YAAYH,SAAW,gBAAkB,IAC1D,kBAAC,OAAD,CAAMlB,GAAIa,EAAKQ,YAAYC,MACvB,kBAACL,EAAD,CAAoBC,SAAUL,EAAKQ,YAAYH,aAGvD,yBAAK1B,UAAWqB,EAAKQ,YAAYH,SAAW,gBAAkB,SAC1D,yBAAK1B,UAAU,8BACVqB,EAAKQ,YAAYE,MAEtB,yBAAK/B,UAAU,oBACX,wBAAIA,UAAU,6BACV,kBAAC,OAAD,CACIA,UAAU,4BACVQ,GAAIa,EAAKQ,YAAYC,MAEpBT,EAAKQ,YAAYL,QAG1B,uBAAGxB,UAAU,mCACRqB,EAAKQ,YAAYG,aAEtB,kBAAC,OAAD,CAAMxB,GAAIa,EAAKQ,YAAYC,MACvB,yBAAK9B,UAAU,4BAAf,c,kCCqCLL,IAlEI,CACf,CACIsC,cAAe,mBACfpC,cACI,uEACJC,YAAa,0CACbC,SAAU,6CAEd,CACIkC,cAAe,mBACfpC,cAAe,kCACfC,YAAa,wBACbC,SAAU,6CAEd,CACIkC,cAAe,oBACfpC,cACI,8DACJC,YAAa,gDACbC,SAAU,6CAEd,CACIkC,cAAe,mBACfpC,cACI,kEACJC,YAAa,yCACbC,SAAU,6CAEd,CACIkC,cAAe,oBACfpC,cACI,+EACJC,YAAa,0DACbC,SAAU,6CAEd,CACIkC,cAAe,mBACfpC,cACI,mFACJC,YACI,yGACJC,SAAU,6CAEd,CACIkC,cAAe,cACfpC,cACI,yEACJC,YAAa,kDACbC,SAAU,6CAEd,CACIkC,cAAe,gBACfpC,cACI,6GACJC,YAAa,kDACbC,SAAU,6CAEd,CACIkC,cAAe,gBACfpC,cACI,+FACJC,YAAa,eACbC,SAAU","file":"component---src-templates-index-js-d25f30c061f6a270d1f8.js","sourcesContent":["import React from 'react';\n\nimport obsessions from '../data/obsession-data';\n\nimport './CurrentObsession.css';\n\nconst CurrentObsession = () => {\n    const { lyricsExcerpt, songwriters, videoUrl } = obsessions[\n        obsessions.length - 1\n    ];\n    return (\n        <div className=\"current-obssession-container\">\n            <div className=\"footer-content\">\n                <h2 className=\"text-light text-center\">Current obsession</h2>\n                <p className=\"text-light text-center m-0\">\n                    <i>{lyricsExcerpt}</i>\n                </p>\n                <p className=\"text-light text-center\">— {songwriters}</p>\n                <iframe\n                    className=\"responsive-iframe\"\n                    src={videoUrl}\n                    frameborder=\"0\"\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                    allowfullscreen\n                ></iframe>\n            </div>\n        </div>\n    );\n};\n\nexport default CurrentObsession;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport PostListItem from '../components/PostListItem';\nimport CurrentObsession from '../components/CurrentObsession';\n\nimport './index.css';\n\nconst IndexPage = ({\n    data: {\n        posts: { edges },\n    },\n    pageContext: { previousPagePath, nextPagePath },\n}) => {\n    const posts = edges.map(edge => (\n        <PostListItem key={edge.node.id} post={edge.node} />\n    ));\n\n    return (\n        <Layout>\n            <SEO title=\"Home\" />\n            <div className=\"layout\">\n                {posts}\n                <PageNavigation\n                    previousPagePath={previousPagePath}\n                    nextPagePath={nextPagePath}\n                />\n            </div>\n            <CurrentObsession />\n        </Layout>\n    );\n};\n\nconst PageNavigation = ({ previousPagePath, nextPagePath }) => (\n    <div className=\"page-navigation\">\n        {previousPagePath && (\n            <Link to={previousPagePath}>\n                <div className=\"blog-post-list-item-link\">Previous</div>\n            </Link>\n        )}\n        {nextPagePath && (\n            <Link to={nextPagePath}>\n                <div className=\"blog-post-list-item-link\">Next</div>\n            </Link>\n        )}\n    </div>\n);\n\nexport const pageQuery = graphql`\n    query($skip: Int!, $limit: Int!) {\n        posts: allMarkdownRemark(\n            filter: { frontmatter: { path: { regex: \"/.+(?<!pt)$/\" } } }\n            sort: { fields: [frontmatter___date], order: DESC }\n            skip: $skip\n            limit: $limit\n        ) {\n            edges {\n                node {\n                    id\n                    excerpt(pruneLength: 250)\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        path\n                        title\n                        description\n                        imageUrl\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default IndexPage;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport './PostListItem.css';\n\nconst PostListItem = ({ post }) => (\n    <div className=\"blog-post-list-item\">\n        <div className={post.frontmatter.imageUrl ? 'w-100-nl w-25' : ''}>\n            <Link to={post.frontmatter.path}>\n                <BlogPostImageCover imageUrl={post.frontmatter.imageUrl} />\n            </Link>\n        </div>\n        <div className={post.frontmatter.imageUrl ? 'w-100-nl w-75' : 'w-100'}>\n            <div className=\"blog-post-list-item-header\">\n                {post.frontmatter.date}\n            </div>\n            <div className=\"layout-container\">\n                <h1 className=\"blog-post-list-item-title\">\n                    <Link\n                        className=\"blog-post-list-item-title\"\n                        to={post.frontmatter.path}\n                    >\n                        {post.frontmatter.title}\n                    </Link>\n                </h1>\n                <p className=\"blog-post-list-item-description\">\n                    {post.frontmatter.description}\n                </p>\n                <Link to={post.frontmatter.path}>\n                    <div className=\"blog-post-list-item-link\">Read</div>\n                </Link>\n            </div>\n        </div>\n    </div>\n);\n\nconst BlogPostImageCover = ({ imageUrl }) =>\n    imageUrl ? (\n        <div\n            className=\"blog-post-list-item-image\"\n            style={{ backgroundImage: `url(\"${imageUrl}\")` }}\n        />\n    ) : null;\n\nexport default PostListItem;\n","const obsessions = [\n    {\n        dateInsertion: 'October 12, 2019',\n        lyricsExcerpt:\n            \"I'm high enough from all the waiting to ride a wave on your inhaling\",\n        songwriters: 'Imogen Heap, Guy Sighsworth (Frou Frou)',\n        videoUrl: 'https://www.youtube.com/embed/5XONarRhvI4',\n    },\n    {\n        dateInsertion: 'October 28, 2019',\n        lyricsExcerpt: \"Maniac, some may say that I'm a\",\n        songwriters: 'Conan Gray, Dan Nigro',\n        videoUrl: 'https://www.youtube.com/embed/-E-_IRJU5w0',\n    },\n    {\n        dateInsertion: 'November 19, 2019',\n        lyricsExcerpt:\n            \"Could have been my anything / Now everything's embarrassing\",\n        songwriters: 'Sky Ferreira, Ariel Rechtshaid, Devonté Hynes',\n        videoUrl: 'https://www.youtube.com/embed/_qsGZ6ngUoU',\n    },\n    {\n        dateInsertion: 'December 8, 2019',\n        lyricsExcerpt:\n            \"But you just met somebody new / And now it's gon' be me and you\",\n        songwriters: 'Robyn, Alexander Kronlund, Klas Åhlund',\n        videoUrl: 'https://www.youtube.com/embed/CHn7w3o22PA',\n    },\n    {\n        dateInsertion: 'December 29, 2019',\n        lyricsExcerpt:\n            \"I'm out of my head, and I know that you're scared, because hearts get broken\",\n        songwriters: 'Harry Styles, Kid Harpoon, Mitch Rowland, Tyler Johnson',\n        videoUrl: 'https://www.youtube.com/embed/enuYFtMHgfU',\n    },\n    {\n        dateInsertion: 'January 29, 2020',\n        lyricsExcerpt:\n            \"And when you decide it's your time to arrive, I've loved you for all of my life.\",\n        songwriters:\n            'Halsey, Ammar Malik, Andrew VanWyngarden, Benny Blanco, Cashmere Cat, Dave Lubben, Kevin Snevely, Lido',\n        videoUrl: 'https://www.youtube.com/embed/MLw3JCQSkCU',\n    },\n    {\n        dateInsertion: 'May 7, 2020',\n        lyricsExcerpt:\n            \"If you're offended by this song, you're clearly doing something wrong.\",\n        songwriters: 'Dua Lipa, Jason Evigan, Justin Tranter, Kennedi',\n        videoUrl: 'https://www.youtube.com/embed/k0QWX2M7W7M',\n    },\n    {\n        dateInsertion: 'June 28, 2020',\n        lyricsExcerpt:\n            \"And I won't say you're the reason I was on my knees, but I'm thinking 'bout making a comeback, back to me.\",\n        songwriters: 'Carly Rae Jepsen, Jack Antonoff, Jared Manierka',\n        videoUrl: 'https://www.youtube.com/embed/CxI5C4Hel1o',\n    },\n    {\n        dateInsertion: 'July 31, 2020',\n        lyricsExcerpt:\n            \"I didn't have it in myself to go with grace, and you're the hero flying around, saving face.\",\n        songwriters: 'Taylor Swift',\n        videoUrl: 'https://www.youtube.com/embed/OWbDJFtHl3w',\n    },\n];\n\nexport default obsessions;\n"],"sourceRoot":""}